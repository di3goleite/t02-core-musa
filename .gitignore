## Core latex/pdflatex auxiliary files:
*.aux
*.glo
*.idx
*.log
*.toc
*.ist
*.acn
*.acr
*.alg
*.bbl
*.blg
*.dvi
*.glg
*.gls
*.ilg
*.ind
*.lof
*.lot
*.maf
*.mtc
*.mtc1
*.out
*.fls
*.synctex.gz

## Intermediate documents:
*.dvi
*-converted-to.*
# these rules might exclude image files for figures etc.
# *.ps
# *.eps
# *.pdf

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bcf
*.blg
*-blx.aux
*-blx.bib
*.brf
*.run.xml

## Build tool auxiliary files:
*.fdb_latexmk
*.synctex.gz
*.synctex.gz(busy)
*.pdfsync

## Auxiliary and intermediate files from other packages:

# algorithms
*.alg
*.loa

# amsthm
*.thm

# beamer
*.nav
*.snm
*.vrb

#(e)ledmac/(e)ledpar
*.end
*.[1-9]
*.[1-9][0-9]
*.[1-9][0-9][0-9]
*.[1-9]R
*.[1-9][0-9]R
*.[1-9][0-9][0-9]R
*.eledsec[1-9]
*.eledsec[1-9]R
*.eledsec[1-9][0-9]
*.eledsec[1-9][0-9]R
*.eledsec[1-9][0-9][0-9]
*.eledsec[1-9][0-9][0-9]R

# glossaries
*.acn
*.acr
*.glg
*.glo
*.gls

# hyperref
*.brf

# listings
*.lol

# makeidx
*.idx
*.ilg
*.ind
*.ist

# minitoc
*.maf
*.mtc
*.mtc0

# minted
*.pyg

# morewrites
*.mw

# nomencl
*.nlo

# sagetex
*.sagetex.sage
*.sagetex.py
*.sagetex.scmd

# sympy
*.sout
*.sympy
sympy-plots-for-*.tex/

# todonotes
*.tdo

# xindy
*.xdy

# backup files
*~
*.bak

# Working with Altera Quartus II (Q2) and do proper versioning is not that easy
# but if you follow some rules it can be accomplished. :)
# This file should be placed into the main directory where the .qpf file is
# found. Generally Q2 throws all entities and so on in the main directory, but
# you can place all stuff also in separate folders. This approach is followed
# here. So when you create a new design create one or more folders where your
# entities will be located and put a .gitignore in there that overrides the
# ignores of this file, e.g. one single rule stating "!*" which allows now all
# type of files. When you add a MegaFunction or another entity to your design,
# simply add it to one of your private folders and Q2 will be happy and manage
# everything quite good. When you want to do versioning of your generated
# SOF/POF files, you can do this by redirecting the generated output to an own
# folder. To do this go to:
# "Assignments"
#   -> "Settings
#      -> "Compilation Process Settings"
#         -> "Save project output files in specified directory"
# Now you can either place a .gitignore in the directory and allow the following
# list of types:
#   !*.sof
#   !*.pof
# or you create an own submodule in the folder to keep binary files out of your
# design.

# ignore hdl source files in top level directory
*.vhd
*.v

# ignore Quartus II generated files
*sopc_*
*.jdi
*.ptf.*
*.sof
*.pof
*.qws
*.smsg
*_inst.vhd
*_generation_script*
*.done
*.txt
*.qarlog
*.rpt
*.summary
*.qws
*.cmp
*.eqn
*.html
*.jpg
*.bak
*.qar
*.sopc_builder
*example*
*~
*.sdc
*.tcl
*.pin
*.mif
*.hex

# ignore Quartus II generated folders
db/
incremental_db/
simulation/
timing/
testbench/
*_sim/